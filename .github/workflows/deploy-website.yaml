name: Deploy website to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'Docs/**'
      - 'Results/**'
      - 'README*.md'
      - 'archive/*/Docs/**'
      - 'archive/*/Results/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: creating html redirections
        run: ./redirections/create.sh
      - name: Add static pages from previous championships to the public folder
        env:
          BASE_URL: ${{ steps.pages.outputs.base_url }}
        run : |
          set -e
          _do() {
            echo ">>>" "$@" >&2
            "$@"
          }
          while read -r year_folder; do
            if [[ $year_folder =~ /([[:digit:]]{4})$ ]]; then
              _do cp -a "${year_folder}/Website" "./public/${BASH_REMATCH[1]}"
            fi
          done < <(find ./archives -maxdepth 1 -type d -name '2???'))
          if [[ $BASE_URL != "https://rvspoc.org" ]]; then
            _do find ./public -type f -exec sed -Ei "s@https://rvspoc.org@${BASE_URL}@" '{}' \;
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
